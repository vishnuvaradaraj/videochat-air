<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
					  xmlns:s="library://ns.adobe.com/flex/spark" width="100%" height="100%" backgroundColor="black" backgroundAlpha="0.2"  xmlns:components="components.*" xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Script>
		<![CDATA[
			import events.UserStatusEvent;
			
			import model.Globals;
			
			import mx.core.IVisualElement;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import spark.components.Group;
			import spark.components.View;
			import spark.components.ViewNavigator;
			import spark.components.ViewNavigatorApplication;
			
			[Bindable]
			private var globals:Globals = Globals.getInstance();

			[Bindable]
			public var message :String = "Loading...";
			
			private var parentView:View;
			
			public function show(msg:String=null):void
			{
				if (msg)
				{
					this.message = msg;
				}
				
				this.parentView = this.globals.mobileApplication.navigator.activeView;
				if (this.parentView)
				{
					this.parentView.addElement(this);
				}
			}
			
			public function cancel():void
			{
				if (this.parentView && this.parentView.isActive)
				{
					this.parentView.removeElement(this);
				}
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:states>
		<s:State name="portrait" />
		<s:State name="landscape"/>
	</s:states>
	
	<s:VGroup width="100%" height="100%">
		<mx:Spacer height="20%" />
		<s:HGroup width="100%" height="100%">
			<mx:Spacer width="30%"/>
			<s:BorderContainer backgroundColor="black" backgroundAlpha=".8" cornerRadius="15" >
				
				<s:HGroup horizontalAlign="center" verticalAlign="middle" paddingTop="20" paddingLeft="20" paddingBottom="20" paddingRight="20" >
					
					<components:BusyIndicator id="busyIndicator" busy="true" width="48" height="48"  />
					<s:Label id="progressLabel" text="{this.message}" color="#FFFFFF" />
					
				</s:HGroup>
				
			</s:BorderContainer> 
		</s:HGroup>
	</s:VGroup>
	
	
</s:SkinnableContainer>
